name: Build PHP 8.1

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  create-mysql-db:
    name: Create MySQL Test Database
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Setup MySQL Client
        run: |
          sudo apt update
          sudo apt install mysql-client-core-8.0
          
      - name: Wait for MySQL
        run: |
          until mysqladmin ping -h 127.0.0.1 --silent; do
            echo 'waiting for mysql...'
            sleep 1
          done
          
      - name: Create MySQL Test DB
        run: |
          mysql -h 127.0.0.1 -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS testing_db;"

  create-mssql-db:
    name: Create SQL Server Test Database
    runs-on: ubuntu-latest
    services:
      sql.data:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: ${{ secrets.SA_SQL_SERVER_PASSWORD }}
          ACCEPT_EULA: Y
          MSSQL_PID: Express
        ports:
          - "1433:1433"
    steps:
      - name: Setup MSSQL
        run: |
         curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc
         curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
         sudo apt update
         sudo apt install mssql-tools18
         /opt/mssql-tools18/bin/sqlcmd -S localhost -U SA -P ${{ secrets.SA_SQL_SERVER_PASSWORD }}  -Q 'create database testing_db' -C
      
  test:
    name: Run Tests
    needs: [create-mysql-db, create-mssql-db]
    uses: WebFiori/workflows/.github/workflows/test-php.yaml@main
    with:
      php-version: '8.1'
    secrets: inherit

  code-coverage:
    name: Coverage
    needs: test
    uses: WebFiori/workflows/.github/workflows/coverage-codecov.yaml@main
    with:
      php-version: '8.1'
      coverage-file: 'php-8.1-coverage.xml'
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
